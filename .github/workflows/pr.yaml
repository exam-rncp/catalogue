name: Build and Test Catalogue Image in Sock-Shop Ecosystem

on:
  pull_request:

jobs:
  build:
    permissions:
      contents: write
    defaults:
      run:
        working-directory: go/src/github.com/exam-rncp/catalogue
    runs-on: ubuntu-latest
    env:
      GROUP: f3lin
      COMMIT: ${{ github.sha }}
      REPO: catalogue
      REPO_DB: catalogue-db
      GO_VERSION: 1.7.5
      GOPATH: /home/runner/work/catalogue/catalogue/go/

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: go/src/github.com/exam-rncp/catalogue

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup PATH
        run: echo "${GOPATH}/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: go get -u github.com/FiloSottile/gvt && gvt restore

      - name: Build
        run: |
          go test -v

      - name: Container Tests
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run:  |
          make test-unit
          make test-container
  
      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          chmod +x scripts/git_update_tag.sh
          bash scripts/git_update_tag.sh -v patch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Docker images tag
        env:
          TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |
           docker image tag $GROUP/$REPO:v0.0 $GROUP/$REPO:$TAG
           docker image tag $GROUP/$REPO_DB:v0.0 $GROUP/$REPO_DB:$TAG
     
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.GROUP }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Run Docker Compose
        id: docker-compose
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./docker-compose-dev.yaml"
        continue-on-error: false

      - name: Get Logs from Catalogue Container
        run: docker logs catalogue-catalogue-1 > logs.txt || true

      - name: Check for errors in logs
        run: |
          if grep -i "error" logs.txt; then
            echo "Errors found in container logs"
            cat logs.txt
            exit 1
          else
            echo "No errors found in container logs"
          fi

      - name: Post Logs as PR Comment
        if: steps.docker-compose.outcome == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let logOutput;
            try {
              logOutput = fs.readFileSync('logs.txt', 'utf8');
            } catch (error) {
              logOutput = 'Unable to read logs.';
            }
            const output = `#### Docker logs catalogue ðŸ“–\`${{ steps.docker-compose.outcome }}\`
            <details><summary>Show Logs</summary>

            \`\`\`\n
            ${logOutput}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

