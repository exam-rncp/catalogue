name: Test new Implementation
on:
  push:
    branches: [ dev ]

jobs:
  build:
    permissions:
      contents: write
    defaults:
      run:
        working-directory: go/src/github.com/exam-rncp/catalogue
    runs-on: ubuntu-latest
    env:
      GROUP: f3lin
      REPO: catalogue
      REPO_DB: catalogue-db
      GO_VERSION: 1.7.5
      GOPATH: /home/runner/work/catalogue/catalogue/go/

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: go/src/github.com/exam-rncp/catalogue

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup PATH
        run: echo "${GOPATH}/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: go get -u github.com/FiloSottile/gvt && gvt restore

      - name: Build
        run: |
          go test -v

      - name: Unit Tests
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run:  |
          make test-unit

      - name: Generate Docker Compose File
        run: |
          NETWORK_NAME="network_$(git rev-parse --short HEAD || date +%s)"
          TAG=$(echo $GITHUB_SHA | cut -c1-7)
          sed -i "s/\NETWORKS/$NETWORK_NAME/g" docker-compose.yml
          sed -i "s/\${TAG}/$TAG/g" docker-compose.temp.yml
          chmod 644 docker-compose.yml

      - name: Container Tests
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run:  |
          make test-container

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.GROUP }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push user to Docker Hub
        if: steps.healthcheck.outcome == 'success'
        run: |
          TAG=$(echo $GITHUB_SHA | cut -c1-7)
          docker push $GROUP/$REPO:$TAG
          docker push $GROUP/$REPO_DB:$TAG