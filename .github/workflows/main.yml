name: ci

on:
  push:
    branches:
      - main  # run for branches
    tags:
      - "*"  # run for tags
  pull_request:
    branches:
      - "*"  # run for branches
    tags:
      - "*"  # run for tags

jobs:
  build:
    permissions:
      contents: write
    defaults:
      run:
        working-directory: go/src/github.com/exam-rncp/catalogue
    runs-on: ubuntu-latest
    env:
      GROUP: f3lin
      COMMIT: ${{ github.sha }}
      REPO: catalogue
      REPO_DB: catalogue-db
      GO_VERSION: 1.7.5
      GOPATH: /home/runner/work/catalogue/catalogue/go/

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: go/src/github.com/exam-rncp/catalogue

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup PATH
        run: echo "${GOPATH}/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: go get -u github.com/FiloSottile/gvt && gvt restore

      - name: Build
        run: |
          go test -v

      - name: Container Tests
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run:  |
          make test-unit
          make test-container
  
      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          chmod +x scripts/git_update_tag.sh
          bash scripts/git_update_tag.sh -v patch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Docker images tag
        env:
          TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: docker image ls

      # docker image tag exam-rncp/$REPO $GROUP/$REPO:$TAG
      # docker image tag exam-rncp/$REPO_DB $GROUP/$REPO:$TAG

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ env.GROUP }}
      #     password: ${{ secrets.DOCKER_TOKEN }}

      # - name: Push user to Docker Hub
      #   env:
      #     TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      #   run: |
      #     docker push $GROUP/$REPO:$TAG
      #     docker push $GROUP/$REPO_DB:$TAG